#include <iostream>
#include <vector>
#include <unordered_map>
#include <unordered_set>
using namespace std;

class Solution {
public:
    bool uniqueOccurrences(vector<int>& arr) {
        unordered_map<int, int> freq;
        for (int num : arr) {
            freq[num]++;
        }

        unordered_set<int> seen;
        for (auto& [key, count] : freq) {
            if (seen.count(count)) {
                return false;
            }
            seen.insert(count);
        }

        return true;
    }
};

int main() {
    Solution sol;

    vector<int> arr1 = {1, 2, 2, 1, 1, 3};
    cout << (sol.uniqueOccurrences(arr1) ? "true" : "false") << endl;  // true

    vector<int> arr2 = {1, 2};
    cout << (sol.uniqueOccurrences(arr2) ? "true" : "false") << endl;  // false

    vector<int> arr3 = {-3, 0, 1, -3, 1, 1, 1, -3, 10, 0};
    cout << (sol.uniqueOccurrences(arr3) ? "true" : "false") << endl;  // true

    return 0;
}
